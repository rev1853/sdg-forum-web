{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "FlowingMenu-JS-TW",
  "type": "registry:block",
  "title": "FlowingMenu",
  "description": "Liquid flowing active indicator glides between menu items.",
  "dependencies": [
    "gsap",
    "tailwindcss"
  ],
  "files": [
    {
      "path": "public/tailwind/src/tailwind/Components/FlowingMenu/FlowingMenu.jsx",
      "content": "import React from 'react';\nimport { gsap } from 'gsap';\n\nfunction FlowingMenu({ items = [] }) {\n  return (\n    <div className=\"w-full h-full overflow-hidden\">\n      <nav className=\"flex flex-col h-full m-0 p-0\">\n        {items.map((item, idx) => (\n          <MenuItem key={idx} {...item} />\n        ))}\n      </nav>\n    </div>\n  );\n}\n\nfunction MenuItem({ link, text, image }) {\n  const itemRef = React.useRef(null);\n  const marqueeRef = React.useRef(null);\n  const marqueeInnerRef = React.useRef(null);\n\n  const animationDefaults = { duration: 0.6, ease: 'expo' };\n\n  const findClosestEdge = (mouseX, mouseY, width, height) => {\n    const topEdgeDist = (mouseX - width / 2) ** 2 + mouseY ** 2;\n    const bottomEdgeDist = (mouseX - width / 2) ** 2 + (mouseY - height) ** 2;\n    return topEdgeDist < bottomEdgeDist ? 'top' : 'bottom';\n  };\n\n  const handleMouseEnter = ev => {\n    if (!itemRef.current || !marqueeRef.current || !marqueeInnerRef.current) return;\n    const rect = itemRef.current.getBoundingClientRect();\n    const edge = findClosestEdge(ev.clientX - rect.left, ev.clientY - rect.top, rect.width, rect.height);\n\n    gsap\n      .timeline({ defaults: animationDefaults })\n      .set(marqueeRef.current, { y: edge === 'top' ? '-101%' : '101%' })\n      .set(marqueeInnerRef.current, { y: edge === 'top' ? '101%' : '-101%' })\n      .to([marqueeRef.current, marqueeInnerRef.current], { y: '0%' });\n  };\n\n  const handleMouseLeave = ev => {\n    if (!itemRef.current || !marqueeRef.current || !marqueeInnerRef.current) return;\n    const rect = itemRef.current.getBoundingClientRect();\n    const edge = findClosestEdge(ev.clientX - rect.left, ev.clientY - rect.top, rect.width, rect.height);\n\n    gsap\n      .timeline({ defaults: animationDefaults })\n      .to(marqueeRef.current, { y: edge === 'top' ? '-101%' : '101%' })\n      .to(marqueeInnerRef.current, { y: edge === 'top' ? '101%' : '-101%' });\n  };\n\n  const repeatedMarqueeContent = Array.from({ length: 4 }).map((_, idx) => (\n    <React.Fragment key={idx}>\n      <span className=\"text-[#060010] uppercase font-normal text-[4vh] leading-[1.2] p-[1vh_1vw_0]\">{text}</span>\n      <div\n        className=\"w-[200px] h-[7vh] my-[2em] mx-[2vw] p-[1em_0] rounded-[50px] bg-cover bg-center\"\n        style={{ backgroundImage: `url(${image})` }}\n      />\n    </React.Fragment>\n  ));\n\n  return (\n    <div className=\"flex-1 relative overflow-hidden text-center shadow-[0_-1px_0_0_#fff]\" ref={itemRef}>\n      <a\n        className=\"flex items-center justify-center h-full relative cursor-pointer uppercase no-underline font-semibold text-white text-[4vh] hover:text-[#060010] focus:text-white focus-visible:text-[#060010]\"\n        href={link}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {text}\n      </a>\n      <div\n        className=\"absolute top-0 left-0 w-full h-full overflow-hidden pointer-events-none bg-white translate-y-[101%]\"\n        ref={marqueeRef}\n      >\n        <div className=\"h-full w-[200%] flex\" ref={marqueeInnerRef}>\n          <div className=\"flex items-center relative h-full w-[200%] will-change-transform animate-marquee\">\n            {repeatedMarqueeContent}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FlowingMenu;\n\n// Note: this is also needed\n// /** @type {import('tailwindcss').Config} */\n// export default {\n//   content: [\"./index.html\", \"./src/**/*.{js,ts,jsx,tsx}\"],\n//   theme: {\n//     extend: {\n//       translate: {\n//         '101': '101%',\n//       },\n//       keyframes: {\n//         marquee: {\n//           'from': { transform: 'translateX(0%)' },\n//           'to': { transform: 'translateX(-50%)' }\n//         }\n//       },\n//       animation: {\n//         marquee: 'marquee 15s linear infinite'\n//       }\n//     }\n//   },\n//   plugins: [],\n// };\n",
      "type": "registry:component"
    }
  ]
}