{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ScrollReveal-JS-TW",
  "type": "registry:block",
  "title": "ScrollReveal",
  "description": "Text gently unblurs and reveals on scroll.",
  "dependencies": [
    "gsap"
  ],
  "files": [
    {
      "path": "public/tailwind/src/tailwind/TextAnimations/ScrollReveal/ScrollReveal.jsx",
      "content": "import { useEffect, useRef, useMemo } from 'react';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst ScrollReveal = ({\n  children,\n  scrollContainerRef,\n  enableBlur = true,\n  baseOpacity = 0.1,\n  baseRotation = 3,\n  blurStrength = 4,\n  containerClassName = '',\n  textClassName = '',\n  rotationEnd = 'bottom bottom',\n  wordAnimationEnd = 'bottom bottom'\n}) => {\n  const containerRef = useRef(null);\n\n  const splitText = useMemo(() => {\n    const text = typeof children === 'string' ? children : '';\n    return text.split(/(\\s+)/).map((word, index) => {\n      if (word.match(/^\\s+$/)) return word;\n      return (\n        <span className=\"inline-block word\" key={index}>\n          {word}\n        </span>\n      );\n    });\n  }, [children]);\n\n  useEffect(() => {\n    const el = containerRef.current;\n    if (!el) return;\n\n    const scroller = scrollContainerRef && scrollContainerRef.current ? scrollContainerRef.current : window;\n\n    gsap.fromTo(\n      el,\n      { transformOrigin: '0% 50%', rotate: baseRotation },\n      {\n        ease: 'none',\n        rotate: 0,\n        scrollTrigger: {\n          trigger: el,\n          scroller,\n          start: 'top bottom',\n          end: rotationEnd,\n          scrub: true\n        }\n      }\n    );\n\n    const wordElements = el.querySelectorAll('.word');\n\n    gsap.fromTo(\n      wordElements,\n      { opacity: baseOpacity, willChange: 'opacity' },\n      {\n        ease: 'none',\n        opacity: 1,\n        stagger: 0.05,\n        scrollTrigger: {\n          trigger: el,\n          scroller,\n          start: 'top bottom-=20%',\n          end: wordAnimationEnd,\n          scrub: true\n        }\n      }\n    );\n\n    if (enableBlur) {\n      gsap.fromTo(\n        wordElements,\n        { filter: `blur(${blurStrength}px)` },\n        {\n          ease: 'none',\n          filter: 'blur(0px)',\n          stagger: 0.05,\n          scrollTrigger: {\n            trigger: el,\n            scroller,\n            start: 'top bottom-=20%',\n            end: wordAnimationEnd,\n            scrub: true\n          }\n        }\n      );\n    }\n\n    return () => {\n      ScrollTrigger.getAll().forEach(trigger => trigger.kill());\n    };\n  }, [scrollContainerRef, enableBlur, baseRotation, baseOpacity, rotationEnd, wordAnimationEnd, blurStrength]);\n\n  return (\n    <h2 ref={containerRef} className={`my-5 ${containerClassName}`}>\n      <p className={`text-[clamp(1.6rem,4vw,3rem)] leading-[1.5] font-semibold ${textClassName}`}>{splitText}</p>\n    </h2>\n  );\n};\n\nexport default ScrollReveal;\n",
      "type": "registry:component"
    }
  ]
}