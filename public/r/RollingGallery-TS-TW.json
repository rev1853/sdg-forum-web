{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "RollingGallery-TS-TW",
  "type": "registry:block",
  "title": "RollingGallery",
  "description": "3D rolling gallery with drag controls.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "public/ts/tailwind/src/ts-tailwind/Components/RollingGallery/RollingGallery.tsx",
      "content": "import React, { useEffect, useState } from 'react';\nimport { motion, useMotionValue, useAnimation, useTransform, PanInfo, ResolvedValues } from 'motion/react';\n\nconst IMGS: string[] = [\n  'https://images.unsplash.com/photo-1528181304800-259b08848526?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  'https://images.unsplash.com/photo-1506665531195-3566af2b4dfa?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  'https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?q=80&w=3456&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  'https://images.unsplash.com/photo-1495103033382-fe343886b671?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  'https://images.unsplash.com/photo-1506781961370-37a89d6b3095?q=80&w=3264&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  'https://images.unsplash.com/photo-1599576838688-8a6c11263108?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  'https://images.unsplash.com/photo-1494094892896-7f14a4433b7a?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  'https://plus.unsplash.com/premium_photo-1664910706524-e783eed89e71?q=80&w=3869&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  'https://images.unsplash.com/photo-1503788311183-fa3bf9c4bc32?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  'https://images.unsplash.com/photo-1585970480901-90d6bb2a48b5?q=80&w=3774&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D'\n];\n\ninterface RollingGalleryProps {\n  autoplay?: boolean;\n  pauseOnHover?: boolean;\n  images?: string[];\n}\n\nconst RollingGallery: React.FC<RollingGalleryProps> = ({ autoplay = false, pauseOnHover = false, images = [] }) => {\n  const galleryImages = images.length > 0 ? images : IMGS;\n\n  const [isScreenSizeSm, setIsScreenSizeSm] = useState<boolean>(window.innerWidth <= 640);\n  useEffect(() => {\n    const handleResize = () => setIsScreenSizeSm(window.innerWidth <= 640);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const cylinderWidth: number = isScreenSizeSm ? 1100 : 1800;\n  const faceCount: number = galleryImages.length;\n  const faceWidth: number = (cylinderWidth / faceCount) * 1.5;\n  const radius: number = cylinderWidth / (2 * Math.PI);\n\n  const dragFactor: number = 0.05;\n  const rotation = useMotionValue(0);\n  const controls = useAnimation();\n\n  const transform = useTransform(rotation, (val: number) => `rotate3d(0,1,0,${val}deg)`);\n\n  const startInfiniteSpin = (startAngle: number) => {\n    controls.start({\n      rotateY: [startAngle, startAngle - 360],\n      transition: {\n        duration: 20,\n        ease: 'linear',\n        repeat: Infinity\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (autoplay) {\n      const currentAngle = rotation.get();\n      startInfiniteSpin(currentAngle);\n    } else {\n      controls.stop();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [autoplay]);\n\n  const handleUpdate = (latest: ResolvedValues) => {\n    if (typeof latest.rotateY === 'number') {\n      rotation.set(latest.rotateY);\n    }\n  };\n\n  const handleDrag = (_: MouseEvent | TouchEvent | PointerEvent, info: PanInfo): void => {\n    controls.stop();\n    rotation.set(rotation.get() + info.offset.x * dragFactor);\n  };\n\n  const handleDragEnd = (_: MouseEvent | TouchEvent | PointerEvent, info: PanInfo): void => {\n    const finalAngle = rotation.get() + info.velocity.x * dragFactor;\n    rotation.set(finalAngle);\n    if (autoplay) {\n      startInfiniteSpin(finalAngle);\n    }\n  };\n\n  const handleMouseEnter = (): void => {\n    if (autoplay && pauseOnHover) {\n      controls.stop();\n    }\n  };\n\n  const handleMouseLeave = (): void => {\n    if (autoplay && pauseOnHover) {\n      const currentAngle = rotation.get();\n      startInfiniteSpin(currentAngle);\n    }\n  };\n\n  return (\n    <div className=\"relative h-[500px] w-full overflow-hidden\">\n      <div\n        className=\"absolute top-0 left-0 h-full w-[48px] z-10\"\n        style={{\n          background: 'linear-gradient(to left, rgba(0,0,0,0) 0%, #060010 100%)'\n        }}\n      />\n      <div\n        className=\"absolute top-0 right-0 h-full w-[48px] z-10\"\n        style={{\n          background: 'linear-gradient(to right, rgba(0,0,0,0) 0%, #060010 100%)'\n        }}\n      />\n      <div className=\"flex h-full items-center justify-center [perspective:1000px] [transform-style:preserve-3d]\">\n        <motion.div\n          drag=\"x\"\n          dragElastic={0}\n          onDrag={handleDrag}\n          onDragEnd={handleDragEnd}\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          animate={controls}\n          onUpdate={handleUpdate}\n          style={{\n            transform: transform,\n            rotateY: rotation,\n            width: cylinderWidth,\n            transformStyle: 'preserve-3d'\n          }}\n          className=\"flex min-h-[200px] cursor-grab items-center justify-center [transform-style:preserve-3d]\"\n        >\n          {galleryImages.map((url, i) => (\n            <div\n              key={i}\n              className=\"group absolute flex h-fit items-center justify-center p-[8%] [backface-visibility:hidden] md:p-[6%]\"\n              style={{\n                width: `${faceWidth}px`,\n                transform: `rotateY(${(360 / faceCount) * i}deg) translateZ(${radius}px)`\n              }}\n            >\n              <img\n                src={url}\n                alt=\"gallery\"\n                className=\"pointer-events-none h-[120px] w-[300px] rounded-[15px] border-[3px] border-white object-cover transition-transform duration-300 ease-out group-hover:scale-105 sm:h-[100px] sm:w-[220px]\"\n              />\n            </div>\n          ))}\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default RollingGallery;\n",
      "type": "registry:component"
    }
  ]
}